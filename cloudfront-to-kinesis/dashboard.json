{
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 485,
    "links": [],
    "panels": [
      {
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "__DATASOURCE__"
        },
        "gridPos": {
          "h": 3,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 2,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<img src=\"https://hydrolix-public.s3.us-east-2.amazonaws.com/Cascade-Logo.png\" align=\"left\" />\n<a href=\"/d/${__dashboard.uid}/${__dashboard}?${filters:queryparam} AND ${query:raw}\">Click here to add filter:</a>\n <code>${query:raw}</code>\nCurrent Filters:\n <code>${filters:raw}</code>",
          "mode": "html"
        },
        "pluginVersion": "10.4.1",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "__DATASOURCE__"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [
              {
                "options": {
                  "from": 200,
                  "result": {
                    "color": "green",
                    "index": 0
                  },
                  "to": 299
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 300,
                  "result": {
                    "color": "blue",
                    "index": 1
                  },
                  "to": 399
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 400,
                  "result": {
                    "color": "orange",
                    "index": 2
                  },
                  "to": 499
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 500,
                  "result": {
                    "color": "red",
                    "index": 3
                  },
                  "to": 599
                },
                "type": "range"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byRegexp",
                "options": "/2.*/"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "green",
                    "mode": "shades"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "/3.*/"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "blue",
                    "mode": "shades"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "/4.*/"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "orange",
                    "mode": "shades"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byRegexp",
                "options": "/5.*/"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "shades"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 3
        },
        "id": 1,
        "interval": "5s",
        "options": {
          "legend": {
            "calcs": [
              "max",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "editorType": "sql",
            "format": 0,
            "hide": false,
            "meta": {
              "builderOptions": {
                "columns": [],
                "database": "",
                "limit": 1000,
                "mode": "list",
                "queryType": "table",
                "table": ""
              }
            },
            "pluginVersion": "4.0.6",
            "queryType": "timeseries",
            "rawSql": "SELECT if(response_status_code > 0, response_status_code::String, null), count(), $__timeInterval(${timefilter}) as time\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time, response_status_code\nORDER BY time",
            "refId": "status_code"
          }
        ],
        "title": "HTTP Status Code",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "__DATASOURCE__"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds",
              "seriesBy": "last"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "percent"
              },
              "thresholdsStyle": {
                "mode": "dashed+area"
              }
            },
            "fieldMinMax": true,
            "mappings": [
              {
                "options": {
                  "from": 0,
                  "result": {
                    "color": "red",
                    "index": 0
                  },
                  "to": 50
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 50,
                  "result": {
                    "color": "orange",
                    "index": 1
                  },
                  "to": 70
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 70,
                  "result": {
                    "color": "green",
                    "index": 2
                  },
                  "to": 100
                },
                "type": "range"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 3
        },
        "id": 3,
        "interval": "5s",
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "editorType": "sql",
            "format": 0,
            "hide": false,
            "meta": {
              "builderOptions": {
                "columns": [],
                "database": "",
                "limit": 1000,
                "mode": "list",
                "queryType": "table",
                "table": ""
              }
            },
            "pluginVersion": "4.0.6",
            "queryType": "timeseries",
            "rawSql": "SELECT countIf (cache_edge_result_type = 'Hit') / count() * 100 as cache_hit_pct, $__timeInterval(${timefilter}) as time\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time, cache_edge_result_type\nORDER BY time",
            "refId": "cache_hit"
          }
        ],
        "title": "Cache Hit",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "__DATASOURCE__"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "bytes"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 11
        },
        "id": 4,
        "interval": "5s",
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "editorType": "sql",
            "format": 0,
            "hide": false,
            "meta": {
              "builderOptions": {
                "columns": [],
                "database": "",
                "limit": 1000,
                "mode": "list",
                "queryType": "table",
                "table": ""
              }
            },
            "pluginVersion": "4.0.6",
            "queryType": "timeseries",
            "rawSql": "SELECT sum(response_content_bytes) as sum_bytes, $__timeInterval(${timefilter}) as time\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time\nORDER BY time",
            "refId": "sum_bytes_total"
          },
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "editorType": "sql",
            "format": 0,
            "hide": false,
            "meta": {
              "builderOptions": {
                "columns": [],
                "database": "",
                "limit": 1000,
                "mode": "list",
                "queryType": "table",
                "table": ""
              }
            },
            "pluginVersion": "4.0.6",
            "queryType": "timeseries",
            "rawSql": "SELECT sum(response_content_bytes) as bytes, $__timeInterval(${timefilter}) as time, cache_edge_result_type\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time, cache_edge_result_type\nORDER BY time",
            "refId": "sum_bytes_cache"
          }
        ],
        "title": "Bytes Delivered",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "__DATASOURCE__"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-GrYlRd",
              "seriesBy": "last"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisSoftMax": 100,
              "axisSoftMin": 0,
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "percent"
              },
              "thresholdsStyle": {
                "mode": "area"
              }
            },
            "fieldMinMax": true,
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "yellow",
                  "value": 5
                },
                {
                  "color": "orange",
                  "value": 15
                },
                {
                  "color": "red",
                  "value": 25
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "__systemRef": "hideSeriesFrom",
              "matcher": {
                "id": "byNames",
                "options": {
                  "mode": "exclude",
                  "names": [
                    "error_rate"
                  ],
                  "prefix": "All except:",
                  "readOnly": true
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": false,
                    "tooltip": false,
                    "viz": true
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 11
        },
        "id": 12,
        "interval": "5s",
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "editorType": "sql",
            "format": 0,
            "hide": false,
            "meta": {
              "builderOptions": {
                "columns": [],
                "database": "",
                "limit": 1000,
                "mode": "list",
                "queryType": "table",
                "table": ""
              }
            },
            "pluginVersion": "4.0.6",
            "queryType": "timeseries",
            "rawSql": "SELECT countIf(response_status_code > '400') / count() * 100 as error_rate, $__timeInterval(${timefilter}) as time\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time\nORDER BY time",
            "refId": "cache_hit"
          }
        ],
        "title": "Error Rate",
        "type": "timeseries"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 19
        },
        "id": 6,
        "panels": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "cellOptions": {
                    "type": "auto"
                  },
                  "inspect": false
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "sum_bytes"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "bytes"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "offload_hits"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "mode": "lcd",
                        "type": "gauge",
                        "valueDisplayMode": "text"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-RdYlGr"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "error_rate"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "mode": "lcd",
                        "type": "gauge",
                        "valueDisplayMode": "text"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-GrYlRd"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "request_host"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "title": "Drill to Host",
                          "url": "/d/${__dashboard.uid}﻿/﻿${__dashboard}﻿?﻿${filters:queryparam}﻿&﻿${response_status_code:queryparam}﻿&﻿${request_method:queryparam}﻿&﻿${response_content_type:queryparam}﻿&﻿${cache_behavior_path_pattern:queryparam}﻿&﻿${pop:queryparam}﻿&﻿${client_country_iso_code:queryparam}﻿&﻿${cache_edge_result_type:queryparam}﻿&﻿${edge_request_id:queryparam}﻿&﻿${client_ip:queryparam}﻿&﻿${request_user_agent:queryparam}﻿&﻿${request_path:queryparam}﻿&﻿${header:queryparam}﻿&﻿${header_value:queryparam}﻿&﻿${timefilter:queryparam}﻿&﻿var-${__field.name}﻿=${__value.text}&${__url_time_range}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "request_path"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "title": "",
                          "url": "/d/${__dashboard.uid}﻿/﻿${__dashboard}﻿?﻿${filters:queryparam}﻿&﻿${response_status_code:queryparam}﻿&﻿${request_method:queryparam}﻿&﻿${response_content_type:queryparam}﻿&﻿${cache_behavior_path_pattern:queryparam}﻿&﻿${pop:queryparam}﻿&﻿${client_country_iso_code:queryparam}﻿&﻿${cache_edge_result_type:queryparam}﻿&﻿${edge_request_id:queryparam}﻿&﻿${client_ip:queryparam}﻿&﻿${request_user_agent:queryparam}﻿&﻿${request_host:queryparam}﻿&﻿${header:queryparam}﻿&﻿${header_value:queryparam}﻿&﻿${timefilter:queryparam}﻿&﻿var-${__field.name}﻿=${__value.text}&${__url_time_range}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 11,
              "w": 24,
              "x": 0,
              "y": 20
            },
            "id": 5,
            "options": {
              "cellHeight": "sm",
              "footer": {
                "countRows": false,
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": [
                {
                  "desc": true,
                  "displayName": "count()"
                }
              ]
            },
            "pluginVersion": "10.4.1",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 1,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "table",
                "rawSql": "SELECT request_host,request_path,  count(), sum(response_content_bytes) as sum_bytes, countIf(cache_edge_result_type = 'Hit') / count() * 100 as offload_hits, countIf(response_status_code > '400') / count() * 100 as error_rate\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY \trequest_path, request_host\nORDER BY count()\nLIMIT 100",
                "refId": "A"
              }
            ],
            "title": "Request Analysis",
            "type": "table"
          }
        ],
        "title": "Request Path Analysis",
        "type": "row"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 20
        },
        "id": 7,
        "panels": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "error_rate"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-GrYlRd"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "offload_hits"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-RdYlGr"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "sum_bytes"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "bytes"
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 18,
              "w": 12,
              "x": 0,
              "y": 32
            },
            "id": 8,
            "options": {
              "basemap": {
                "config": {},
                "name": "Layer 0",
                "type": "default"
              },
              "controls": {
                "mouseWheelZoom": true,
                "showAttribution": true,
                "showDebug": false,
                "showMeasure": false,
                "showScale": false,
                "showZoom": true
              },
              "layers": [
                {
                  "config": {
                    "showLegend": true,
                    "style": {
                      "color": {
                        "field": "error_rate",
                        "fixed": "dark-green"
                      },
                      "opacity": 0.4,
                      "rotation": {
                        "fixed": 0,
                        "max": 360,
                        "min": -360,
                        "mode": "clamped"
                      },
                      "size": {
                        "field": "count()",
                        "fixed": 5,
                        "max": 50,
                        "min": 2
                      },
                      "symbol": {
                        "fixed": "img/icons/marker/circle.svg",
                        "mode": "fixed"
                      },
                      "symbolAlign": {
                        "horizontal": "center",
                        "vertical": "center"
                      },
                      "text": {
                        "field": "error_rate",
                        "fixed": "",
                        "mode": "fixed"
                      },
                      "textConfig": {
                        "fontSize": 12,
                        "offsetX": 0,
                        "offsetY": 0,
                        "textAlign": "center",
                        "textBaseline": "middle"
                      }
                    }
                  },
                  "filterData": {
                    "id": "byRefId",
                    "options": "A"
                  },
                  "location": {
                    "lookup": "client_country_iso_code",
                    "mode": "lookup"
                  },
                  "name": "Error Rate",
                  "tooltip": true,
                  "type": "markers"
                }
              ],
              "tooltip": {
                "mode": "details"
              },
              "view": {
                "allLayers": true,
                "id": "zero",
                "lat": 0,
                "lon": 0,
                "zoom": 1
              }
            },
            "pluginVersion": "10.4.1",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 1,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "table",
                "rawSql": "SELECT client_country_iso_code, count(), sum(response_content_bytes) as sum_bytes, countIf(cache_edge_result_type = 'Hit') / count() * 100 as offload_hits, countIf(response_status_code > '400') / count() * 100 as error_rate\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY \tclient_country_iso_code\nORDER BY count()\nLIMIT 100",
                "refId": "A"
              }
            ],
            "title": "Geo Delivery",
            "type": "geomap"
          },
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "cellOptions": {
                    "type": "auto"
                  },
                  "inspect": false
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "error_rate"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-GrYlRd"
                      }
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "mode": "lcd",
                        "type": "gauge",
                        "valueDisplayMode": "text"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "offload_hits"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-RdYlGr"
                      }
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "mode": "lcd",
                        "type": "gauge",
                        "valueDisplayMode": "text"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "sum_bytes"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "bytes"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "client_country_iso_code"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "title": "",
                          "url": "/d/${__dashboard.uid}﻿/﻿${__dashboard}﻿?﻿${filters:queryparam}﻿&﻿${response_status_code:queryparam}﻿&﻿${request_method:queryparam}﻿&﻿${response_content_type:queryparam}﻿&﻿${cache_behavior_path_pattern:queryparam}﻿&﻿${pop:queryparam}﻿&﻿${request_path:queryparam}﻿&﻿${cache_edge_result_type:queryparam}﻿&﻿${edge_request_id:queryparam}﻿&﻿${client_ip:queryparam}﻿&﻿${request_user_agent:queryparam}﻿﻿&﻿${header:queryparam}﻿&﻿${header_value:queryparam}﻿&﻿${timefilter:queryparam}﻿&﻿var-${__field.name}﻿=${__value.text}&${__url_time_range}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "pop"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "title": "",
                          "url": "/d/${__dashboard.uid}﻿/﻿${__dashboard}﻿?﻿${filters:queryparam}﻿&﻿${response_status_code:queryparam}﻿&﻿${request_method:queryparam}﻿&﻿${response_content_type:queryparam}﻿&﻿${cache_behavior_path_pattern:queryparam}﻿&${client_country_iso_code:queryparam}﻿&﻿${request_path:queryparam}﻿&﻿${cache_edge_result_type:queryparam}﻿&﻿${edge_request_id:queryparam}﻿&﻿${client_ip:queryparam}﻿&﻿${request_user_agent:queryparam}﻿﻿&﻿${header:queryparam}﻿&﻿${header_value:queryparam}﻿&﻿${timefilter:queryparam}﻿&﻿var-${__field.name}﻿=${__value.text}&${__url_time_range}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 18,
              "w": 12,
              "x": 12,
              "y": 32
            },
            "id": 9,
            "options": {
              "cellHeight": "sm",
              "footer": {
                "countRows": false,
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true
            },
            "pluginVersion": "10.4.1",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 1,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "table",
                "rawSql": "SELECT client_country_iso_code, pop, count(), sum(response_content_bytes) as sum_bytes, countIf(cache_edge_result_type = 'Hit') / count() * 100 as offload_hits, countIf(response_status_code > '400') / count() * 100 as error_rate\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY \tclient_country_iso_code, pop\nORDER BY count()\nLIMIT 100",
                "refId": "A"
              }
            ],
            "title": "Geo Delivery",
            "type": "table"
          }
        ],
        "title": "Geo Analysis",
        "type": "row"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 21
        },
        "id": 14,
        "panels": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "off"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    }
                  ]
                },
                "unit": "short"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 33
            },
            "id": 15,
            "interval": "5s",
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "11.1.4",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 0,
                "hide": false,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "timeseries",
                "rawSql": "SELECT uniq(client_ip) as uniq_ip, $__timeInterval(${timefilter}) as time\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time\nORDER BY time",
                "refId": "uniq_ips"
              }
            ],
            "title": "Uniq Client IP",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "description": "A session is a combination of uniq(IP, User-Agent)",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "off"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    }
                  ]
                },
                "unit": "short"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 33
            },
            "id": 16,
            "interval": "5s",
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "11.1.4",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 0,
                "hide": false,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "timeseries",
                "rawSql": "SELECT uniq(client_ip, request_user_agent) as uniq_ip, $__timeInterval(${timefilter}) as time\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY time\nORDER BY time",
                "refId": "uniq_ips"
              }
            ],
            "title": "Uniq Client Session",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "cellOptions": {
                    "type": "auto"
                  },
                  "inspect": false
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "sum_bytes"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "bytes"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "offload_hits"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "mode": "lcd",
                        "type": "gauge",
                        "valueDisplayMode": "text"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-RdYlGr"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "error_rate"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "percent"
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "mode": "lcd",
                        "type": "gauge",
                        "valueDisplayMode": "text"
                      }
                    },
                    {
                      "id": "min",
                      "value": 0
                    },
                    {
                      "id": "max",
                      "value": 100
                    },
                    {
                      "id": "color",
                      "value": {
                        "mode": "continuous-GrYlRd"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "client_ip"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "title": "",
                          "url": "/d/${__dashboard.uid}﻿/﻿${__dashboard}﻿?﻿${filters:queryparam}﻿&﻿${response_status_code:queryparam}﻿&﻿${request_method:queryparam}﻿&﻿${response_content_type:queryparam}﻿&﻿${cache_behavior_path_pattern:queryparam}﻿&﻿${pop:queryparam}﻿&﻿${client_country_iso_code:queryparam}﻿&﻿${cache_edge_result_type:queryparam}﻿&﻿${edge_request_id:queryparam}﻿&﻿${request_host:queryparam}﻿&﻿${request_user_agent:queryparam}﻿&﻿${request_path:queryparam}﻿&﻿${header:queryparam}﻿&﻿${header_value:queryparam}﻿&﻿${timefilter:queryparam}﻿&﻿var-${__field.name}﻿=${__value.text}&${__url_time_range}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "request_user_agent"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "title": "",
                          "url": "/d/${__dashboard.uid}﻿/﻿${__dashboard}﻿?﻿${filters:queryparam}﻿&﻿${response_status_code:queryparam}﻿&﻿${request_method:queryparam}﻿&﻿${response_content_type:queryparam}﻿&﻿${cache_behavior_path_pattern:queryparam}﻿&﻿${pop:queryparam}﻿&﻿${client_country_iso_code:queryparam}﻿&﻿${cache_edge_result_type:queryparam}﻿&﻿${edge_request_id:queryparam}﻿&﻿${client_ip:queryparam}﻿&﻿${request_path:queryparam}﻿&﻿${request_host:queryparam}﻿&﻿${header:queryparam}﻿&﻿${header_value:queryparam}﻿&﻿${timefilter:queryparam}﻿&﻿var-${__field.name}﻿=${__value.text}&${__url_time_range}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 11,
              "w": 24,
              "x": 0,
              "y": 41
            },
            "id": 13,
            "options": {
              "cellHeight": "sm",
              "footer": {
                "countRows": false,
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": [
                {
                  "desc": true,
                  "displayName": "count()"
                }
              ]
            },
            "pluginVersion": "10.4.1",
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 1,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "table",
                "rawSql": "SELECT client_ip,request_user_agent,  count(), sum(response_content_bytes) as sum_bytes, countIf(cache_edge_result_type = 'Hit') / count() * 100 as offload_hits, countIf(response_status_code > '400') / count() * 100 as error_rate\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nGROUP BY \tclient_ip, request_user_agent\nORDER BY count()\nLIMIT 100",
                "refId": "A"
              }
            ],
            "title": "Request Analysis",
            "type": "table"
          }
        ],
        "title": "User Analysis",
        "type": "row"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 22
        },
        "id": 10,
        "panels": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "__DATASOURCE__"
            },
            "gridPos": {
              "h": 20,
              "w": 24,
              "x": 0,
              "y": 51
            },
            "id": 11,
            "options": {
              "dedupStrategy": "none",
              "enableLogDetails": true,
              "prettifyLogMessage": true,
              "showCommonLabels": false,
              "showLabels": false,
              "showTime": true,
              "sortOrder": "Descending",
              "wrapLogMessage": true
            },
            "targets": [
              {
                "datasource": {
                  "type": "grafana-clickhouse-datasource",
                  "uid": "__DATASOURCE__"
                },
                "editorType": "sql",
                "format": 1,
                "meta": {
                  "builderOptions": {
                    "columns": [],
                    "database": "",
                    "limit": 1000,
                    "mode": "list",
                    "queryType": "table",
                    "table": ""
                  }
                },
                "pluginVersion": "4.0.6",
                "queryType": "table",
                "rawSql": "SELECT *\t\nFROM ${table}\nWHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(response_status_code IN (${response_status_code:sqlstring}),$response_status_code)\nAND $__conditionalAll(request_host IN (${request_host:sqlstring}),$request_host)\nAND $__conditionalAll(request_method IN (${request_method:sqlstring}),$request_method)\nAND $__conditionalAll(cache_behavior_path_pattern IN (${cache_behavior_path_pattern:sqlstring}),$cache_behavior_path_pattern)\nAND $__conditionalAll(pop IN (${pop:sqlstring}),$pop)\nAND $__conditionalAll(client_country_iso_code IN (${client_country_iso_code:sqlstring}),$client_country_iso_code)\nAND $__conditionalAll(cache_edge_result_type IN (${cache_edge_result_type:sqlstring}),$cache_edge_result_type)\nAND $__conditionalAll(edge_request_id IN (${edge_request_id:sqlstring}),$edge_request_id)\nAND $__conditionalAll(client_ip IN (${client_ip:sqlstring}),$client_ip)\nAND $__conditionalAll(request_user_agent IN (${request_user_agent:sqlstring}),$request_user_agent)\nAND $__conditionalAll(response_content_type IN (${response_content_type:sqlstring}),$response_content_type)\nAND $__conditionalAll(request_path IN (${request_path:sqlstring}),$request_path)\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}\nORDER BY timestamp DESC\nLIMIT 1000",
                "refId": "A"
              }
            ],
            "title": "Raw Logs",
            "type": "logs"
          }
        ],
        "title": "Raw Logs",
        "type": "row"
      }
    ],
    "refresh": "30s",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "hide": 0,
          "includeAll": true,
          "label": "HTTP Status Code",
          "multi": true,
          "name": "response_status_code",
          "options": [
            {
              "selected": true,
              "text": "All",
              "value": "$__all"
            },
            {
              "selected": false,
              "text": "200",
              "value": "200"
            },
            {
              "selected": false,
              "text": "201",
              "value": "201"
            },
            {
              "selected": false,
              "text": "202",
              "value": "202"
            },
            {
              "selected": false,
              "text": "204",
              "value": "204"
            },
            {
              "selected": false,
              "text": "205",
              "value": "205"
            },
            {
              "selected": false,
              "text": "206",
              "value": "206"
            },
            {
              "selected": false,
              "text": "301",
              "value": "301"
            },
            {
              "selected": false,
              "text": "302",
              "value": "302"
            },
            {
              "selected": false,
              "text": "304",
              "value": "304"
            },
            {
              "selected": false,
              "text": "307",
              "value": "307"
            },
            {
              "selected": false,
              "text": "308",
              "value": "308"
            },
            {
              "selected": false,
              "text": "400",
              "value": "400"
            },
            {
              "selected": false,
              "text": "401",
              "value": "401"
            },
            {
              "selected": false,
              "text": "403",
              "value": "403"
            },
            {
              "selected": false,
              "text": "404",
              "value": "404"
            },
            {
              "selected": false,
              "text": "405",
              "value": "405"
            },
            {
              "selected": false,
              "text": "406",
              "value": "406"
            },
            {
              "selected": false,
              "text": "408",
              "value": "408"
            },
            {
              "selected": false,
              "text": "409",
              "value": "409"
            },
            {
              "selected": false,
              "text": "410",
              "value": "410"
            },
            {
              "selected": false,
              "text": "411",
              "value": "411"
            },
            {
              "selected": false,
              "text": "412",
              "value": "412"
            },
            {
              "selected": false,
              "text": "413",
              "value": "413"
            },
            {
              "selected": false,
              "text": "414",
              "value": "414"
            },
            {
              "selected": false,
              "text": "415",
              "value": "415"
            },
            {
              "selected": false,
              "text": "416",
              "value": "416"
            },
            {
              "selected": false,
              "text": "417",
              "value": "417"
            },
            {
              "selected": false,
              "text": "421",
              "value": "421"
            },
            {
              "selected": false,
              "text": "425",
              "value": "425"
            },
            {
              "selected": false,
              "text": "428",
              "value": "428"
            },
            {
              "selected": false,
              "text": "429",
              "value": "429"
            },
            {
              "selected": false,
              "text": "431",
              "value": "431"
            },
            {
              "selected": false,
              "text": "451",
              "value": "451"
            },
            {
              "selected": false,
              "text": "500",
              "value": "500"
            },
            {
              "selected": false,
              "text": "501",
              "value": "501"
            },
            {
              "selected": false,
              "text": "502",
              "value": "502"
            },
            {
              "selected": false,
              "text": "503",
              "value": "503"
            },
            {
              "selected": false,
              "text": "504",
              "value": "504"
            },
            {
              "selected": false,
              "text": "505",
              "value": "505"
            },
            {
              "selected": false,
              "text": "506",
              "value": "506"
            },
            {
              "selected": false,
              "text": "511",
              "value": "511"
            }
          ],
          "query": "200,201,202,204,205,206,301,302,304,307,308,400,401,403,404,405,406,408,409,410,411,412,413,414,415,416,417,421,425,428,429,431,451,500,501,502,503,504,505,506,511",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(topK(50)(request_host))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 0,
          "includeAll": true,
          "label": "Request Host",
          "multi": true,
          "name": "request_host",
          "options": [],
          "query": "SELECT arrayJoin(topK(50)(request_host))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(topK(50)(request_method))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 0,
          "includeAll": true,
          "label": "Request Method",
          "multi": true,
          "name": "request_method",
          "options": [],
          "query": "SELECT arrayJoin(topK(50)(request_method))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(topK(50)(response_content_type))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 0,
          "includeAll": true,
          "label": "Content Type",
          "multi": true,
          "name": "response_content_type",
          "options": [],
          "query": "SELECT arrayJoin(topK(50)(response_content_type))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(topK(50)(cache_behavior_path_pattern))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 0,
          "includeAll": true,
          "label": "Cache Config Pattern",
          "multi": true,
          "name": "cache_behavior_path_pattern",
          "options": [],
          "query": "SELECT arrayJoin(topK(50)(cache_behavior_path_pattern))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(topK(50)(pop))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 0,
          "includeAll": true,
          "label": "Pop",
          "multi": true,
          "name": "pop",
          "options": [],
          "query": "SELECT arrayJoin(topK(50)(pop))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(topK(50)(client_country_iso_code))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 0,
          "includeAll": true,
          "label": "Country",
          "multi": true,
          "name": "client_country_iso_code",
          "options": [],
          "query": "SELECT arrayJoin(topK(50)(client_country_iso_code))\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "hide": 0,
          "includeAll": true,
          "label": "cache_edge_result_type",
          "multi": true,
          "name": "cache_edge_result_type",
          "options": [
            {
              "selected": true,
              "text": "All",
              "value": "$__all"
            },
            {
              "selected": false,
              "text": "Hit",
              "value": "Hit"
            },
            {
              "selected": false,
              "text": "RefreshHit",
              "value": "RefreshHit"
            },
            {
              "selected": false,
              "text": "Miss",
              "value": "Miss"
            },
            {
              "selected": false,
              "text": "LimitExceeded",
              "value": "LimitExceeded"
            },
            {
              "selected": false,
              "text": "CapacityExceeded",
              "value": "CapacityExceeded"
            },
            {
              "selected": false,
              "text": "Error",
              "value": "Error"
            },
            {
              "selected": false,
              "text": "Redirect",
              "value": "Redirect"
            }
          ],
          "query": "Hit,RefreshHit,Miss,LimitExceeded,CapacityExceeded,Error,Redirect",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": false,
            "text": "",
            "value": ""
          },
          "hide": 0,
          "name": "edge_request_id",
          "options": [
            {
              "selected": true,
              "text": "",
              "value": ""
            }
          ],
          "query": "",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "selected": false,
            "text": "",
            "value": ""
          },
          "hide": 0,
          "name": "client_ip",
          "options": [
            {
              "selected": true,
              "text": "",
              "value": ""
            }
          ],
          "query": "",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "selected": false,
            "text": "",
            "value": ""
          },
          "hide": 0,
          "name": "request_user_agent",
          "options": [
            {
              "selected": true,
              "text": "",
              "value": ""
            }
          ],
          "query": "",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "selected": false,
            "text": "",
            "value": ""
          },
          "hide": 0,
          "name": "request_path",
          "options": [
            {
              "selected": true,
              "text": "",
              "value": ""
            }
          ],
          "query": "",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT arrayJoin(request_header_names) as headers_names\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nAND ${filters}\nGROUP BY headers_names\nLIMIT 50",
          "hide": 0,
          "includeAll": true,
          "multi": false,
          "name": "header",
          "options": [],
          "query": "SELECT arrayJoin(request_header_names) as headers_names\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nAND ${filters}\nGROUP BY headers_names\nLIMIT 50",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT request_header_values[indexOf(request_header_names, '${header}')] as  header_value\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nAND ${filters}\nGROUP BY header_value\nLIMIT 50",
          "hide": 0,
          "includeAll": true,
          "multi": false,
          "name": "header_value",
          "options": [],
          "query": "SELECT request_header_values[indexOf(request_header_names, '${header}')] as  header_value\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nAND ${filters}\nGROUP BY header_value\nLIMIT 50",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "hide": 2,
          "label": "",
          "name": "table",
          "query": "mux.cdn",
          "skipUrlSync": false,
          "type": "constant"
        },
        {
          "current": {
            "selected": false,
            "text": "response_status_code",
            "value": "response_status_code"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT name\nFROM system.columns\nWHERE database = splitByChar('.', '${table}')[1]\nAND table = splitByChar('.', '${table}')[2]\nAND type NOT IN ('DateTime', 'DateTime64(3)', 'Array')",
          "hide": 1,
          "includeAll": false,
          "multi": false,
          "name": "column_name",
          "options": [],
          "query": "SELECT name\nFROM system.columns\nWHERE database = splitByChar('.', '${table}')[1]\nAND table = splitByChar('.', '${table}')[2]\nAND type NOT IN ('DateTime', 'DateTime64(3)', 'Array')",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "Nullable(UInt32)",
            "value": "Nullable(UInt32)"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT type\nFROM system.columns\nWHERE database = splitByChar('.', '${table}')[1]\nAND table = splitByChar('.', '${table}')[2]\nAND name = '${column_name}'",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "column_type",
          "options": [],
          "query": "SELECT type\nFROM system.columns\nWHERE database = splitByChar('.', '${table}')[1]\nAND table = splitByChar('.', '${table}')[2]\nAND name = '${column_name}'",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "=",
            "value": "="
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT multiIf(\n'${column_type}' ILIKE 'Map%',  'has',\n'${column_type}' ILIKE '%string%',  arrayJoin(['=', '!=','LIKE', 'ILIKE', 'NOT LIKE', 'NOT ILIKE']),\n'${column_type}' ILIKE '%int%',  arrayJoin(['<', '>','=', '!=']),\n'${column_type}' ILIKE '%float%',  arrayJoin(['<', '>','=','!=']),\n'=')",
          "hide": 1,
          "includeAll": false,
          "multi": false,
          "name": "evaluation",
          "options": [],
          "query": "SELECT multiIf(\n'${column_type}' ILIKE 'Map%',  'has',\n'${column_type}' ILIKE '%string%',  arrayJoin(['=', '!=','LIKE', 'ILIKE', 'NOT LIKE', 'NOT ILIKE']),\n'${column_type}' ILIKE '%int%',  arrayJoin(['<', '>','=', '!=']),\n'${column_type}' ILIKE '%float%',  arrayJoin(['<', '>','=','!=']),\n'=')",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "arrayJoin(topK(50)(response_status_code))",
            "value": "arrayJoin(topK(50)(response_status_code))"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT if('${column_type}' LIKE 'Map%', 'arrayJoin(mapKeys(${column_name}))', 'arrayJoin(topK(50)(${column_name}))')",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "values_query",
          "options": [],
          "query": "SELECT if('${column_type}' LIKE 'Map%', 'arrayJoin(mapKeys(${column_name}))', 'arrayJoin(topK(50)(${column_name}))')",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT ${values_query:raw}\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "hide": 1,
          "includeAll": false,
          "multi": false,
          "name": "values",
          "options": [],
          "query": "SELECT ${values_query:raw}\nFROM ${table} WHERE $__timeFilter(${timefilter})\nAND $__conditionalAll(has(request_header_names, '${header}'), $header)\nAND $__conditionalAll(has(request_header_values, '${header_value}'), $header_value)\nAND ${filters}",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "timestamp",
            "value": "timestamp"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": " SELECT primary_key FROM system.tables WHERE database = splitByChar('.', '${table}')[1]\nAND table = splitByChar('.', '${table}')[2]",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "timefilter",
          "options": [],
          "query": " SELECT primary_key FROM system.tables WHERE database = splitByChar('.', '${table}')[1]\nAND table = splitByChar('.', '${table}')[2]",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "1=1",
            "value": "1=1"
          },
          "hide": 0,
          "name": "filters",
          "options": [
            {
              "selected": true,
              "text": "1=1",
              "value": "1=1"
            }
          ],
          "query": "1=1",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "selected": false,
            "text": "response_status_code = ''",
            "value": "response_status_code = ''"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "__DATASOURCE__"
          },
          "definition": "SELECT if('${column_type}' LIKE 'Map%', 'mapContains(${column_name}, \\'${values}\\')', '${column_name} ${evaluation} \\'${values}\\'')",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "query",
          "options": [],
          "query": "SELECT if('${column_type}' LIKE 'Map%', 'mapContains(${column_name}, \\'${values}\\')', '${column_name} ${evaluation} \\'${values}\\'')",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-1h",
      "to": "now-1m"
    },
    "timepicker": {
      "nowDelay": "1m",
      "refresh_intervals": [
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ]
    },
    "timezone": "utc",
    "title": "Cascade - Cloudfront",
    "uid": "__DASHBOARD_UUID__",
    "version": 63,
    "weekStart": "",
    "folderid": 0
  }
}
  